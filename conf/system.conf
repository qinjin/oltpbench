##
#Configuration for coordinator to read the remote coordinator address 
#[mdtc.coordinator.address.DCNumber=CoordinatorIndex.IP.Port]
##
mdtc.coordinator.address.0=100:192.168.0.14:8000
#mdtc.coordinator.address.1=101:192.168.0.14:8100
#mdtc.coordinator.address.2=102:192.168.0.14:8200

# milliseconds wait for other coordinators are up.
mdtc.coordinator.startupwait=10000

##
#All node ids
#[mdtc.node.address.DCNumber.NodeIndex=NodeIndex.IP.Port]
##
mdtc.node.address.0.0=0:192.168.0.14:8001
#mdtc.node.address.1.0=0:192.168.0.14:8101
#mdtc.node.address.2.0=0:192.168.0.14:8201

#mdtc.node.address.0.1=1:192.168.0.14:8101
#mdtc.node.address.0.2=2:192.168.0.14:8201

##
#All nodes in a data center.
##
mdtc.datacenter.nodes.number=1
#mdtc.datacenter.nodes.number=3

##
#View properties
#
#View length in milliseconds.
mdtc.view.length=5

##
#Timer intervals
#
coordinator.dispatch.interval=2
server.execution.interval=2

##
#K-V store properties
##
#Storage could be simple or cassandra.
mdtc.storage=cassandra
#Key space
mdtc.storage.keyspace=tpcc
#Column family
mdtc.storage.columnFamily=tpcc

##
#HTTP properties
##
#HTTP client could be okhttp or apache or async or netty (default)
mdtc.httpclient=netty

##
#Thread pool size
##
mdtc.txnresolver.threadpool.size=1

##
#2PL or OCC coordinator use same port
##
mdtc.transaction.2PLCoordinator=-1:192.168.0.14:9300

##
#Result Cassandra server
##
mdtc.result.server=192.168.0.14